[{"content":"Debido al ámbito competitivo de estos juegos, el tema de mejorar está siempre en boca de todos. En cuanto perdemos en una partida de un set de torneo nuestra mente nos dice que hay que mejorar algo, ya que la otra persona lo ha hecho mejor que nosotros o hemos fallado demasiadas cosas. Jugar a un juego competitivo requiere una mejora constante para mantener el nivel.\nÚltimamente ha habido videos muy buenos sobre el tema en Smash Bros Spain, pero me he decidido a hacer una pequeña introducción sobre lo que tendría que ser nuestro camino para mejorar. ¡Espero que os guste!\n  ","date":"2021-05-30T09:21:02Z","image":"https://areidz.github.io/p/c%C3%B3mo-mejorar-en-smash/Mejorar%20en%20Smash%20Bros_hufe716c29e1ee302cf7e6c62efc997655_330094_120x120_fill_q75_box_smart1.jpg","permalink":"https://areidz.github.io/p/c%C3%B3mo-mejorar-en-smash/","title":"¿Cómo mejorar en Smash?"},{"content":"Hace 5 meses que empecé a grabar el podcast de El Último Frame con frecuencia casi semanal, y tras este tiempo creo que he conseguido una setup de grabación bastante decente. Hay elementos que se podrían mejorar, como es el caso del micrófono, ya que aunque tiene una calidad aceptable, los hay bastante mejores y que captan menos ruido. No obstante, para mi situación actual es más que suficiente para proporcionar una buena calidad.\nSin más dilación, vamos a cada uno de los apartados de la configuración.\nSonido  Brazo Neewer y Fifine K669K \nDesde el principio he tenido el micrófono Fifine K669B, que compré hace tiempo por ~20€ en Amazon. El problema principal es que coge mucho ruido, por lo que tenerlo cerca del teclado y que a la vez se me escuchase era inviable. De ahí que comprase un brazo Neewer para ponerlo en la mesa y poder tener el micrófono con menos ganancia cerca de la boca.\n Logo Voicemeeter \nAdemás, desde hace poco utilizo el software Voice Meeter, que me permite eliminar cierta reverberación que existe en mi habitación y realzar los bajos para se escuche más como una locución.\nVídeo  Logitech Streamcam y Microsoft Livecam HD3000 \nAl comienzo grababa con una antigua cámara que me regaló mi novia, una Microsoft Livecam HD3000, que es suficientemente buena para la edad que tiene (por poneros en contexto, el programa para configurarlo se actualizó por última vez para Windows 7 y ofrece integración con MSN Messenger). Durante esta época apañé la iluminación con un aro de luz muy típico de tiktokers.\n Iluminación con focos Neewer \nEste invierno he hecho una actualización grande en este apartado, comprándome una Logitech Streamcam que me ofrece hasta 1080p a 60fps por unos 100€, y unos focos Neewer por 40€ en Aliexpress. La actualización ha merecido la pena, ya que el salto de calidad es notorio.\nEn algún intento intermedio de aumentar la calidad compré una Papalook AF925, pero no me terminaron de gustar los colores que sacaba. Aunque la comparen con una Logitech C920 HD, para mí es bastante peor (Aunque sí que es verdad que por 30€ en Aliexpress, con los precios actuales de las webcam, no es tan mala compra si tienes buena iluminación).\nGrabación Los programas principales que utilizo para grabar son Discord, ya que realizo entrevistas y me aporta una calidad suficiente tanto de audio como de vídeo, y OBS Studio para capturar la zona de la pantalla donde sucede la conversación.\n Logo OBS Studio \nAdemás, OBS tiene opción de capturar diferentes salidas y entradas de audio en diferentes pistas del MKV, lo que me permite capturar mi micrófono y el del entrevistado en pistas diferentes y poder editarlo de forma independiente.\nHice pruebas con Zoom para ver si podía grabar con él los episodios, pero la calidad se modificaba automáticamente aunque estuviese puesto el HD, y la auto grabación tiene una calidad nefasta (véase la calidad del primer episodio de mi podcast a Trifasia).\nProducción A la hora de editar, lo primero que realizo es una conversión del MKV a MP4 con Handbrake para poderlo editar directamente en Premiere Pro. Desde la versión 2019.3 no incluye soporte para MKV, por lo que es un paso que ha tocado añadir recientemente por actualizar el software. He probado otras alternativas como Davinci Resolve y, aunque estoy por pasar a utilizarlo para no pagar la licencia de Adobe, tampoco admite MKV y tengo que sacar tiempo para adaptarme.\n Logo Adobe Premiere Pro \nTras esto, importo la grabación a una plantilla que tengo diseñada en Premiere. En ella podemos ver algunos vídeos que se repiten, como la intro, la outro, algún sonido, el número del episodio… Y tengo una secuencia diseñada con todo editado para que sea añadir la grabación, realizar los cortes necesarios y que me lleve el menor tiempo posible.\nNormalmente el audio lo edito directamente en Adobe Premiere. Al tener la información en pistas, puedo trabajar añadiendo los efectos sobre estas en vez de en cada apartado del podcast, ahorrándome muchísimo tiempo. Además, no soy de añadir música a los podcast, ya que al estar preparados se pueden minimizar los silencios (al igual que sí lo añadiría a un Talkshow en directo), por lo que tampoco es necesaria mayor edición.\nTras esto, exporto con la opción de YouTube HD 1080p.\nPara la miniatura de YouTube también he creado una plantilla, en la cual edito el número del episodio y el título, cambio al entrevistado o entrevistada y pongo un fondo relacionado con la entrevista. Para esto utilizo Photoshop al tener la licencia de Adobe, pero es posible que termine pivotando hacia GIMP, y más con la posibilidad de ponerle la skin de Photoshop.\nDistribución El podcast lo comparto principalmente en dos plataformas: YouTube y Anchor.\n Logos de Anchor y Spotify \nLa primera la configuro en modo estreno programado, con su miniatura y sus metadatos, y compruebo que todo funciona correctamente. La segunda lo distribuye a otras plataformas añadidas (Spotify, Ivoox, Apple Podcast…) de una manera automática, gratuita, aunque sin acceso a monetización. Por ahora no tengo una audiencia tan grande como para plantearme monetizarlo, y si se da el caso, ya veré qué plataformas me pueden servir para ello.\nTransformar el vídeo producido a audio es tan sencillo como usar ffmpeg y arrastrar el archivo a este script:\n@echo off ffmpeg.exe -i \u0026#34;%~1\u0026#34; \u0026#34;%~1\u0026#34;.mp3 Para promocionarlo hago clips del vídeo y los subo a Twitter. También tengo un script en ffmpeg para ello:\n@echo off set /p TiempoInicio=Tiempo de inicio (hh:mm:ss) set /p TiempoFinal=Tiempo de fin (hh:mm:ss) ffmpeg.exe -i \u0026#34;%~1\u0026#34; -ss %TiempoInicio% -to %TiempoFinal% -async 1 -strict -2 corte.mp4 De hecho, hace poco me han contado en twitter que se puede configurar OBS Studio para que haga la conversión de MKV a MP4 automáticamente, así que me da que es algo donde voy a ganar algo de tiempo.\nFINAL Espero que toda esta información te haya resultado útil para preparar tu podcast, elegir componentes o ver qué realiza otra gente de la comunidad. Además de utilizarla para podcasting, también la uso para realizar streamings en Twitch y grabar otra clase de vídeos para YouTube, ya que la calidad de la cámara es genial.\nSi quieres darme algo de vuelta, te agradecería que te pasases por el canal de YouTube del Podcast y me dejases algún comentario, suscripción o \u0026ldquo;me gusta\u0026rdquo; a alguno de los podcast, ya que toda ayuda es poca para intentar difundirlo.\n¡Muchas gracias y nos vemos!\n","date":"2021-02-05T16:31:07Z","image":"https://areidz.github.io/p/mi-setup-de-podcasting-y-streaming/setup_hu1b20e055c100d30021aa68ab5dd151e0_202145_120x120_fill_q75_box_smart1.jpg","permalink":"https://areidz.github.io/p/mi-setup-de-podcasting-y-streaming/","title":"Mi setup de Podcasting y Streaming"},{"content":"Tras ver las últimas actualizaciones en los kernels, consultar el grupo de Google Plus y la nueva guía que han hecho describiendo el proceso de instalación de una manera sencilla, me he aventurado a volver a tener Linux en el pequeñín. Además, gran parte de los problemas que había (no funcionaban los botones físicos, ni la retroiluminación, ni el micrófono\u0026hellip;) han sido solucionados.\nComo ya expliqué en la entrada que redacté en inglés hace unos años, lo primero que hice fue una copia de seguridad del disco duro entero con Macrium Reflect, ya que solo tiene 64GB como máximo y, por si rompo algo que no debería, prefiero tener la copia entera.\nLa decisión de cambiar a Linux es bastante personal. En Windows 10 todo funciona perfectamente y es un sistema bastante estable para la tablet, mientras que en Xubuntu no funciona la cámara y hay que hacer algún apaño para que funcione el sonido, que no funciona por defecto tras la instalación. En mi caso, estoy muy familiarizado con un entorno Windows, y me gustaría aprender a manejarme más con la terminal de Linux y, en general, adaptarme más al sistema. Además, aunque el precio de la licencia Windows venga incluida en el precio del portátil, me llama mucho la filosofía del software libre, y utilizando Windows no puedo terminar de comprenderla plenamente. Si queréis echarla un ojo, aquí tenéis el enlace: https://www.gnu.org/philosophy/philosophy.es.html\nInstalación El proceso lo empecé mal, porque me descargué Ubuntu en vez de Xubuntu, aunque así pude probar también la nueva versión de GNOME y cómo funcionaba en el portátil.\nPara la instalación entera del sistema, seguí esta guía, así que si tenéis alguna duda, os recomiendo consultarla, porque aquí pasaré algunos detalles por alto.\nManos a la obra: grabé la ISO en un pen drive con Rufus y añadí el fichero bootia32.efi para que pudiese bootear el proceso de instalación. Tras encenderlo, seleccioné las opciones para tener el sistema a mi gusto y creé particiones usando todo el disco (borrando Windows y respetando el UEFI).\nEl primer problema empieza al terminar la instalación, y es el de instalar el bootloader. Para ello, hay que conectar el WiFi como nos indica la guía:\ncp /sys/firmware/efi/efivars/nvram-* /lib/firmware/brcm/brcmfmac43241b4-sdio.txt #useful now cp /sys/firmware/efi/efivars/nvram-* /target/lib/firmware/brcm/brcmfmac43241b4-sdio.txt #useful after reboot modprobe -r brcmfmac modprobe brcmfmac Y pasar a instalar el bootloader:\napt update apt install grub-efi-ia32 # grub-pc removed is normal behavior grub-install --efi-directory /boot/efi update-grub El segundo problema viene al intentar tener sonido. Para que funcione, tenemos que descargar esta carpeta de ficheros, extraerla y seguir las instrucciones:\nsudo rm /var/lib/alsa/asound.state sudo mkdir /usr/share/alsa/ucm/bytcr-rt5640 sudo cp HiFi bytcr-rt5640.conf /usr/share/alsa/ucm/bytcr-rt5640 sudo alsactl restore Tras esto, bajamos el volumen y reiniciamos, aunque todavía no tendremos sonido. Nos queda copiar un fichero para sustituir el que se acaba de crear automáticamente.\nsudo cp kernel4.5.xand4.4.x.asound.state /var/lib/alsa/asound.state sudo alsactl restore Con esto, tendríamos que tener el sonido funcionando, pudiendo modificar los parámetros con Pulseaudio con el comando pavucontrol.\nPost instalación Tras instalar el sistema operativo, en mi caso me gusta mucho mirar cómo puedo terminar de optimizarlo aunque ya funcione decentemente. Si os interesa mirar cómo podéis optimizar Xubuntu o cambiar ciertos valores para hacerlo más cómodo para vosotros, podéis echar un vistazo a esta guía: https://sites.google.com/site/easylinuxtipsproject/first-xubuntu.\nMi recomendación es que, al menos, decrementéis el uso del swap, optimicéis Firefox y desactivéis el uso de Java con LibreOffice (y algunas de las opciones que nos cuentan en la guía). No obstante, este tipo de tweaks pueden llevarnos a tener cierta inestabilidad en el sistema, como apunta Gérard Burger en este post: https://plus.google.com/106814689810829884894/posts/MSQZ43hGm5c.\nOtros cambios que he hecho ha sido activar la sincronización vertical en XFCE después de cambiar el entorno de escritorio (ver YouTube o Netflix era un poco suplicio sin ello), instalar los Restricted Extras, activar los repositorios extra, y borrar los restos que quedaban de GNOME. Además, he cambiado el movimiento del ratón, pasando de tener que pulsar dos dedos y deslizar hacia abajo o arriba como es el estándar en muchos de los touchpads, a realizar círculos en él, ya que me parece muchísimo más cómodo.\nSi os dáis cuenta, esta vez no he instalado ni Dropbox ni Chrome, porque no los estoy usando tanto como lo hacía en la universidad. Además, esta vez he instalado Visual Studio Code, porque me he acostumbrado a esta mezcla a caballo entre editor de código e IDE modular, que me permite trabajar con bastante soltura una vez vas cogiendo el truco. Si lo instaláis y queréis ir aprendiendo los accesos rápidos o distintas configuraciones que podéis cambiar, tenéis un buen tutorial en este repositorio de Microsoft. Por ejemplo, esta entrada la estoy editando completamente con este editor, pudiendo ver la previsualización de Markdown con la combinación ctrl+shift+v (y, es más, con ctrl+k v se puede tener una previsualización en directo mientras realizamos cambios), y pudiendo gestionar git directamente en él.\nAlguna cosa que me queda por cambiar, por ejemplo, es el uso de la pantalla táctil, que funciona como un ratón y sería interesante que funcionase como en Windows, bajo mi punto de vista: poder arrastrar los elementos en vez de tener que pinchar en la barra de deslizamiento. Para la navegación web es muchísimo más intuitivo y accesible, y seguro que de alguna manera se puede cambiar.\nPor ahora, no echo en falta nada de lo que hacía en Windows, así que seguiré al menos unos meses utilizándolo. Si tenéis cualquier duda respecto al proceso, no dudéis en contactarme por email o por Twitter.\n¡Un saludo!\n","date":"2018-08-15T09:31:07Z","image":"https://areidz.github.io/p/xubuntu-18.04-en-el-t100ta/asus-t100ta_huc196f110449e0a34896d973121650305_113027_120x120_fill_q75_box_smart1.jpg","permalink":"https://areidz.github.io/p/xubuntu-18.04-en-el-t100ta/","title":"Xubuntu 18.04 en el T100TA"},{"content":"This entry is going to be my linux diary, so I can keep on records the stuff I\u0026rsquo;m doing on the tablet. Well, let\u0026rsquo;s start from the beginning:\nWindows hates me This change started with the new update of Microsoft OS, Windows 10. I wanted to test it on my tablet, an Asus Transformer T100 , to see how it was going. Even though I read a lot about its lack of privacy, I was also curious about all the changes like multi-desktop support (which both Linux and Macintosh have since ages) and Cortana , which offered a lot of features that seemed to be useful.\nSo\u0026hellip; I installed it and, as you can imagine, it lasted about 5 days installed. I\u0026rsquo;ve found every new thing a waste of memory and CPU, and I had to reinstall some drivers like the touch-pad, because it wasn\u0026rsquo;t working correctly. Thankfully, Microsoft offered a downgrade to Windows 8.1 if you didn\u0026rsquo;t like Windows 10, so I tried it. Everything went perfect, except for a thing: That new driver which was installed during the time I was trying Windows 10 wasn\u0026rsquo;t downgraded or something like that, and the desktop kept flashing and restarting even if I restarted the OS. That was the moment I gathered strength to install Ubuntu on my tablet.\nWhy Ubuntu? Because it\u0026rsquo;s the only Linux well tweaked to have almost every single component working. There are some exceptions of parts which aren\u0026rsquo;t working, like the camera, the microphone and the hardware buttons (GPIO), but the rest is working in a really stable way.\nThe start of the journey Taking this into account, I downloaded Asus T100-TA Magic Stick ISO, version 1.5, I booted up Ubuntu and I installed it with the included tool to do so. I overwrote the complete internal flash memory, included the UEFI partition. I still have a backup in my external HDD just in case I want to recover my system as it was a couple of months ago, so I\u0026rsquo;m not afraid to do so.\nFirst thing I\u0026rsquo;ve done with the new OS is delete Unity. I hate that desktop environment, so I\u0026rsquo;ve installed XFCE. To do so, I\u0026rsquo;ve used a tool called tasksel. I\u0026rsquo;ve used the following commands to install it and execute it:\n~ $ sudo apt-get install tasksel\r~ $ sudo tasksel After this, I\u0026rsquo;ve checked Xubuntu-desktop and I\u0026rsquo;ve unchecked Ubuntu-desktop. You have to wait a couple of minutes in order to download XFCE and uninstall Unity and other applications related, and then the OS reboots and you have Xubuntu totally compatible with your tablet.\nPrograms and more programs Then, I\u0026rsquo;ve updated the OS and I\u0026rsquo;ve installed some useful programs:\n~ $ sudo apt-get update \u0026amp;\u0026amp; sudo apt-get upgrade\r~ $ sudo apt-get install libreoffice gdebi-core synaptic aptitude vlc xubuntu-restricted-extras libavcodec-extra rar wireshark Also, I\u0026rsquo;ve installed Dropbox and Google Chrome (I don\u0026rsquo;t really like Chromium now, because Google has done a great advance in memory handling and Chromium is still a bit slower and bigger than Chrome).\nTo install Chrome I\u0026rsquo;ve used:\n~ $ wget https://dl.google.com/linux/direct/google-chrome-stable_current_i386.deb\r~ $ sudo gdebi google-chrome-stable_current_i386.deb In order to install Dropbox, I\u0026rsquo;ve gone to dropbox.com/install and I\u0026rsquo;ve downloaded the \\*.deb file, and followed the instructions.\nAnd that\u0026rsquo;s everything I\u0026rsquo;ve made today. I hope the touchpad support becomes better and it gives us multi-touch as Windows does. That\u0026rsquo;s the only thing I miss, the ability to scroll pages with the touchpad.\nFor further information, have a look at our Google+ Group: https://plus.google.com/communities/117853703024346186936\n(June 2018 Update) Even though I was really motivated with the change to Linux, I switched it back to Windows after 6 months using Linux for the following reasons:\n My feeling of the performance wasn\u0026rsquo;t the same as using Windows. Even in 2018, we don\u0026rsquo;t have complete support for this tablet, and we have to take some workarounds in order to have everything working. And there are some things that probably won\u0026rsquo;t work easily, like the camera. I wasn\u0026rsquo;t using Linux for anything I couldn\u0026rsquo;t do in Windows and I needed some Windows programs for my University courses.  However, I have a constant feeling that maybe I should give it a try again. Will I do it? How knows, but if I do it, I\u0026rsquo;ll keep you informed here ;)\n","date":"2015-09-07T00:00:00Z","image":"https://areidz.github.io/p/linux-on-my-asus-t100ta/programming_hu7661d4e45f6239af78b0d3e98ae3fb9a_84061_120x120_fill_q75_box_smart1.jpg","permalink":"https://areidz.github.io/p/linux-on-my-asus-t100ta/","title":"Linux on my Asus T100TA"},{"content":"After almost seven years using Wordpress and Blogger as my main blogging services, I have decided to change my mind, make a step forward and install a simple web/blog with a great frontend and without a complex database and their vulnerabilities. Furthermore, I do not like the feeling of Wordpress owning the content of my blog because it is hosted there.\nHaving a look at the possibilities I decided to try Jekyll on GitHub Pages. Jekyll is a simple web/blog engine written in Ruby using static pages as entries and posts, so\u0026hellip; no more databases!\nPosts are written in Markdown style as raw-text and are automatically converted to static pages thought a template you can edit yourself.\nInstalling the blog I am using Windows as my main Operative System and Debian as my secondary one. Due to this, I decided to install the server on Windows. This installation and configuration was not a trivial step, so I followed the official docs to do so.\nThe only problem I faced was installing WDM, which was not compiling in my machine. Nevertheless, everything seems to be working perfectly without it, so I am not going to try to fix it for a while.\nFolking the template After looking for any good template to start the blog, I found Clean Blog, an amazing template by Start Bootstrap.\nI modified it to add support for Disqus following this tutorial. Thanks to this I have comments at the bottom of every post.\nIn addition, I have added share buttons following this guide. I had to adapt it to my custom template by creating some new css and html files, loading the css file in head.html and adding the html to the post template. Maybe you could find it interesting.\nUseful links To finish the post, I want to share some useful links:\n Examples: some examples of websites using *Jekyll. Jekyll: main Jekyll website with install guides and configuration tutorials. Jekyll for Windows: a website explaining how to install Jekyll on Windows Markdown Cheatsheet: useful cheatsheet to write posts. Supported language highlighters in Pygments for Jekyll and GitHub Pages  (July 2018 Update) I have recovered some of the entries of my old Jekyll diary and I am posting them here, even though this blog has another template and design. These days I was using Sublime Text as editor, but lately I\u0026rsquo;m liking Visual Studio Code a lot and I\u0026rsquo;m editing this whole blog with it.\n","date":"2015-04-17T00:00:00Z","image":"https://areidz.github.io/p/my-first-experience-with-jekyll/clean-blog_huefeaf1f5bde804debb99f9412b6c9b15_39676_120x120_fill_q75_box_smart1.jpg","permalink":"https://areidz.github.io/p/my-first-experience-with-jekyll/","title":"My first experience with Jekyll"},{"content":"Github is undoubtedly one of the largest webpages when it comes to sharing work with the community. Also, Github allows us to work as a team with the Git version control tools and a nice frontend.\nWhat is the best way to promote the use of this kind of tools among the student? I don\u0026rsquo;t know about your answer, but Github thinks that offering a \u0026ldquo;starter pack\u0026rdquo; is one of the best ways: The GitHub Student Developer Pack.\nRequirements To join the offer, you have to set up your account and add your college email or registered centre. Once you do it and complete the formulary, you\u0026rsquo;ll receive your pack.\nThe pack  The Github Micro Account, which allows us to have 5 private repositories in our GitHub account. A *.me domain for free for a year. Unreal Engine for free as long as we are students. Continuous integration with Travis CI as long as we are students.  And many more things.\nWhat are you waiting to give it a try? Official page: https://education.github.com/pack\n(July 2018 Update) This pack has changed a lot since I wrote this entry, and they have added many more interesting things such as Flatiron School to learn Web Development in a bootcamp, or TapLyrics to prepare A/B tests.\nI am no longer a student, so I can\u0026rsquo;t have them, but if you are, go check it out!\n","date":"2015-03-08T00:00:00Z","image":"https://areidz.github.io/p/github-student-pack/github-student_hu7be9080934d2cbf85778276d6484fd04_34508_120x120_fill_q75_box_smart1.jpg","permalink":"https://areidz.github.io/p/github-student-pack/","title":"GitHub student pack"}]